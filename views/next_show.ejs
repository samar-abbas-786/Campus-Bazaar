<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Show Item</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
      integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
          Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
          sans-serif;
        background-color: #f8f9fa;
      }

      nav {
        height: auto;
        width: 100vw;
        display: flex;
        align-items: center;
        flex-direction: column;
        /* justify-content: space-between; */
        background-color: white;
        padding: 0.51rem;
        padding-bottom: 0;
      }
      .left {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 21px;
        height: 70px;
        display: flex;
        align-items: center;
      }
      .right {
        display: flex;
        background-color: black;
      }
      .right ul {
        display: flex;
        height: 50px;
        width: 100vw;
        justify-content: space-evenly;
        align-items: center;
      }

      .right ul form button {
        border: none;
        outline: none;
        color: white;
        background-color: transparent;
        font-size: 17px;
        font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;
      }
      .allCarts {
        height: 100vh;
        width: 100vw;
        background-color: #f1eaff;
        padding: 1rem;
      }
      .cart {
        height: 380px;
        width: 300px;
        border: 1px solid black;
        border-radius: 10px;
        background-color: white;
        padding: 1rem;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .cart img {
        height: 200px;
        width: 100%;
      }
      .cart h2 {
        font-size: 30px;
        margin-bottom: 0.5rem;
      }
      .cart span {
        color: rgb(235, 74, 74);
        font-size: 25px;
      }
      .buttons {
        display: flex;
        width: 100%;
        justify-content: space-evenly;
        margin-top: 1rem;
      }
      .buttons button {
        height: 40px;
        width: 90px;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 17px;
        background-color: rgb(234, 127, 20);
      }
      #green {
        background-color: green;
      }
      .buttons button:hover {
        background-color: orange;
      }
      #green:hover {
        background-color: rgb(8, 193, 8);
      }

      /* Product Card Styles */
      #userList {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        padding: 20px;
        background-color: #f1eaff;
      }

      .card {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin: 20px;
        padding: 20px;
        max-width: 300px;
        text-align: center;
        transition: transform 0.3s ease;
      }

      .card:hover {
        transform: translateY(-5px);
      }

      .card div {
        margin-bottom: 10px;
      }

      .card div:last-child {
        margin-bottom: 0;
      }

      .card h2 {
        font-size: 1.2rem;
        color: #333;
      }

      .card p {
        font-size: 1rem;
        color: #666;
      }
      @media screen and (max-width: 800px) {
        .right ul form button {
          font-size: 14px;
        }
      }
    </style>
  </head>
  <body>
    <nav>
      <div class="left">
        <h1>üõçÔ∏èUniUnity</h1>
      </div>
      <div class="right">
        <ul>
          <form action="/home" method="get"><button>Home</button></form>
          <form action=""><button>About</button></form>
          <form action="/add" method="get"><button>Add Product</button></form>
          <form action="/allProducts" method="get">
            <button>All Products</button>
          </form>
          <form action="/signup/get" method="get">
            <button>Sign up</button>
          </form>
          <form action="/signup/get" method="get">
            <button>
              <div style="height: 100%; display: flex; align-items: center">
                <i
                  class="fa-solid fa-cart-shopping fa-lg"
                  style="color: #ffffff"
                ></i>
                <p style="color: rgb(189, 34, 34)" id="count">0</p>
              </div>
            </button>
          </form>
        </ul>
      </div>
    </nav>
    <div id="userList"></div>
    <script>
      fetch("/api/user")
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          const listItemDiv = document.getElementById("userList");
          data.forEach((user) => {
            const card = document.createElement("div");
            card.classList.add("card");

            const name = document.createElement("h2");
            name.textContent = user.Name;

            const price = document.createElement("p");
            price.textContent = `Price: ‚Çπ${user.Price}`;

            const contact = document.createElement("p");
            contact.textContent = `Contact: ${user.Contact_NO}`;

            const address = document.createElement("p");
            address.textContent = `Address: ${user.ADDRESS}`;

            const seeProductButton = document.createElement("button");
            seeProductButton.textContent = "Buy Now";
            seeProductButton.style.backgroundColor = "green";
            seeProductButton.style.color = "white";
            seeProductButton.style.padding = "0.2rem";
            seeProductButton.style.fontSize = "1rem";
            seeProductButton.style.marginTop = "1rem";

            seeProductButton.addEventListener("click", (e) => {
              e.preventDefault();
              alert(`You Bought ${user.Name} at ${user.Price}`);
              // alert(`You Have Bought this Product :${user.name}`);
            });
            // delete
            const addToCart = document.createElement("button");
            addToCart.textContent = "Add to Cart";
            addToCart.style.backgroundColor = "red";
            addToCart.style.color = "white";
            addToCart.style.padding = "0.2rem";
            addToCart.style.fontSize = "1rem";
            addToCart.style.marginTop = "1rem";
            addToCart.style.marginLeft = "1rem";
            addToCart.style.paddingLeft = "1rem";
            addToCart.style.paddingRight = "1rem";
            // addToCart.formAction = "/addToCart";
            // addToCart.formMethod = "POST";
            // addToCart.formEnctype =
            //   "application/x-www-form-urlenc/multipart/form";
            // addToCart.addEventListener("click", () => {
            //   fetch("/api/addToCart", {
            //     method: "POST",
            //     headers: {
            //       "Content-Type": "application/json",
            //     },
            //     body: JSON.stringify({
            //       name: user.Name,
            //       price: user.Price,
            //       contact: user.Contact_NO,
            //       address: user.ADDRESS,
            //     }),
            //   })
            //     .then((response) => {
            //       if (!response.ok) {
            //         throw new Error("Network response was not ok");
            //       }
            //       return response.json();
            //     })
            //     .then((data) => {
            //       console.log(data);
            //     })
            //     .catch((err) => {
            //       console.log(err);
            //     });
            // });

            card.appendChild(name);
            card.appendChild(price);
            card.appendChild(contact);
            card.appendChild(address);
            card.appendChild(seeProductButton);
            card.appendChild(addToCart);

            listItemDiv.appendChild(card);
          });
        })
        .catch((error) => {
          console.error("Error fetching user data:", error);
        });
    </script>
  </body>
</html>
